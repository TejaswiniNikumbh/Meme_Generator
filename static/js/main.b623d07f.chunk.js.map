{"version":3,"sources":["logo-meme.png","Meme.jsx","App.js","index.js"],"names":["Meme","React","useState","toptext","bottomtext","randomimg","meme","setMeme","allmemes","setAllmemes","handleChange","event","target","name","value","prevMeme","useEffect","fetch","then","resp","json","data","memes","className","type","placeholder","onChange","onClick","randnum","Math","floor","length","random","url","src","alt","App","logo","style","border","borderRadius","width","height","marginTop","marginLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,G,YAAA,IAA0B,uC,4BCG1B,SAASA,IACxB,MAAwBC,IAAMC,SAAS,CACpCC,QAAU,GACVC,WAAa,GACbC,UAAY,qCAHf,mBAAOC,EAAP,KAAaC,EAAb,KAMA,EAAiCN,IAAMC,SAAS,IAAhD,mBAAOM,EAAP,KAAkBC,EAAlB,KAiBA,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAOC,EAAf,EAAeA,MACfP,GAAQ,SAAAQ,GAAQ,kCACXA,GADW,kBAEbF,EAAQC,OAKT,OAxBJb,IAAMe,WAAU,WACdC,MAAM,qCACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIZ,EAAYY,EAAKA,KAAKC,aAsB9B,8BACK,uBAAMC,UAAU,OAAhB,UACA,sBAAKA,UAAU,OAAf,UACE,uBACAC,KAAK,OACLC,YAAY,WACZF,UAAU,cACVT,MAASR,EAAKH,QACdU,KAAO,UACPa,SAAYhB,IAGX,uBACDc,KAAK,OACLC,YAAY,cACZF,UAAU,cACVT,MAASR,EAAKF,WACdS,KAAO,aACPa,SAAYhB,IAEZ,wBAAQa,UAAU,cAAcI,QAvC/C,WAEE,IAAMC,EAAUC,KAAKC,MAAMtB,EAASuB,OAASF,KAAKG,UAClDzB,GAAQ,SAAAQ,GAAQ,kCACXA,GADW,IAEdV,UAAWG,EAASoB,GAASK,UAkClB,wDAKF,sBAAKV,UAAU,OAAf,UACA,qBAAKW,IAAK5B,EAAKD,UAAYkB,UAAU,aAAaY,IAAI,KACrD,qBAAIZ,UAAY,kBAAhB,UAAmCjB,EAAKH,QAAxC,OAEA,oBAAIoB,UAAY,qBAAhB,SAAsCjB,EAAKF,qBC1C1CgC,MAlBf,WAEE,OACE,mCACE,sBAAKb,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKW,IAAKG,EAAMC,MAAO,CAACC,OAAO,kBAAmBC,aAAa,QAASC,MAAM,OAASC,OAAO,OAASC,UAAU,SAAYR,IAAI,KACjI,oBAAIG,MAAO,CAACM,WAAW,MAAvB,gCAGF,cAAC5C,EAAD,UCVR6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b623d07f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-meme.a1b85a96.png\";","import React from 'react'\r\n\r\n\r\nexport default function Meme() {\r\nconst [meme ,setMeme] = React.useState({\r\n   toptext : \"\",\r\n   bottomtext : \"\",\r\n   randomimg : \"https://i.imgflip.com/1ur9b0.jpg\"\r\n})\r\n\r\nconst [allmemes , setAllmemes] = React.useState([])\r\n\r\nReact.useEffect(() => {\r\n  fetch(\"https://api.imgflip.com/get_memes\")\r\n  .then(resp => resp.json())\r\n  .then(data => setAllmemes(data.data.memes))\r\n})\r\n\r\nfunction getImage(){\r\n  \r\n  const randnum = Math.floor(allmemes.length * Math.random())\r\n  setMeme(prevMeme => ({\r\n    ...prevMeme,\r\n    randomimg: allmemes[randnum].url\r\n\r\n  }))\r\n}\r\nfunction handleChange(event){\r\n  const { name , value} = event.target\r\n  setMeme(prevMeme => ({\r\n    ...prevMeme,\r\n    [name] : value\r\n  }))\r\n\r\n}\r\n \r\n    return (\r\n        <div>\r\n             <main className=\"main\">\r\n             <div className=\"form\">\r\n               <input \r\n               type=\"text\"\r\n               placeholder=\"Top text\"\r\n               className=\"form--input\" \r\n               value = {meme.toptext}\r\n               name = \"toptext\"\r\n               onChange = {handleChange}\r\n               \r\n               />\r\n                <input \r\n               type=\"text\"\r\n               placeholder=\"Bottom text\"\r\n               className=\"form--input\" \r\n               value = {meme.bottomtext}\r\n               name = \"bottomtext\"\r\n               onChange = {handleChange}\r\n               />\r\n               <button className=\"form-button\" onClick={getImage}>\r\n               Get a new meme image üñºÔ∏è\r\n              </button>\r\n              </div>\r\n             \r\n             <div className='meme'>\r\n             <img src={meme.randomimg}  className=\"meme-image\" alt=\"\" />\r\n              <h2 className = \"meme--text1 top\">{meme.toptext} </h2>\r\n             \r\n              <h2 className = \"meme--text2 bottom\">{meme.bottomtext}</h2>\r\n              </div>\r\n          \r\n          </main>\r\n       \r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport logo from './logo-meme.png'\nimport Meme from './Meme'\n\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"header\">\n          <img src={logo} style={{border:\"4px solid black\", borderRadius:\"500px\", width:\"60px\" , height:\"60px\" , marginTop:\"0.32%\"  }} alt=\"\" />\n          <h2 style={{marginLeft:\"4%\" }}>Meme--Generator</h2>\n        </div>\n      \n        <Meme/>\n      </div>\n    \n    </>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}